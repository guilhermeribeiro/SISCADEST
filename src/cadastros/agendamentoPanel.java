/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cadastros;
import janelas.cliente;
import janelas.servicos;
import java.awt.Font;
import java.awt.Point;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import mysql.conexao;
import net.sf.nachocalendar.CalendarFactory;
import net.sf.nachocalendar.components.DateField;

/**
 *
 * @author Alan
 */
public class agendamentoPanel extends javax.swing.JPanel {
    MaskFormatter ftmData;
     public  conexao  conexao_cliente;
      private  conexao conexao_agendamento;
        public  conexao conexao_servico2;
            private DefaultTableModel modeloagendamento;
            DateField datefield;
    /**
     * Creates new form agendamentoPanel
     */
    public agendamentoPanel() {
        DateField datefield = null;
        initComponents();
        
       // conexaoServico();
       
        conexaoAgendamento();
        preencherJTabelAgendamento();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_obs = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_agendamento = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        try {    ftmData = new MaskFormatter("##:##"); } catch (ParseException e) {     e.printStackTrace(); }
        jt_hora = new javax.swing.JFormattedTextField(ftmData);
        jLabel5 = new javax.swing.JLabel();
        botao_gravar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jt_atendente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jt_protocolo = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jcbCliente = new javax.swing.JTextField();
        jcbServico = new javax.swing.JTextField();
        date_agend = new net.sf.nachocalendar.components.DateField();

        jLabel1.setText("Cliente:");

        jLabel2.setText("Serviço:");

        jLabel3.setText("Observação:");

        jt_obs.setColumns(20);
        jt_obs.setRows(5);
        jScrollPane1.setViewportView(jt_obs);

        jLabel4.setText("Data:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Agendamentos"));

        table_agendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Protocolo", "Data", "Hora", "Cliente", "Serviço", "Atendente", "Observação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_agendamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_agendamentoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_agendamento);

        jButton1.setText("Filtrar por data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setText("Mostrar todos");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addContainerGap(109, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel5.setText("Hora:");

        botao_gravar.setText("Gravar Registro");
        botao_gravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_gravarActionPerformed(evt);
            }
        });

        jLabel6.setText("Atendente");

        jLabel7.setText("Protocolo:");

        jt_protocolo.setEditable(false);

        jButton3.setText("Atualizar Registro");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Novo Registro");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Remover Registro");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton7.setText("+");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jcbServico.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton2)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton4))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(botao_gravar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton3))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(16, 16, 16))
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jcbServico, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jcbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(date_agend, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(291, 291, 291)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jt_atendente, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jt_hora, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(jt_protocolo)))))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(date_agend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jt_atendente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jt_protocolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton7)
                        .addComponent(jLabel2)
                        .addComponent(jcbServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jt_hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botao_gravar)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton4)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botao_gravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_gravarActionPerformed
        conexaoAgendamento();
        inserirAgendamento();
        conexaoAgendamento();
        preencherJTabelAgendamento();
        inicioPanel.preencherJTabelAgendamento(0);
    }//GEN-LAST:event_botao_gravarActionPerformed

    private void table_agendamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_agendamentoMouseClicked
        Point click = new Point(evt.getX(), evt.getY());

        int column = table_agendamento.columnAtPoint(click);
        int row = table_agendamento.rowAtPoint(click);
        String value = String.valueOf(table_agendamento.getValueAt(row, 0));
        
        botao_gravar.setEnabled(false);

        try {
            conexao_agendamento.resultset.first();
            String igual = "n";
            while (igual == "n") {
                String pesquisado = conexao_agendamento.resultset.getString("id");//.substring(0,(tamanho_pesquisa));
                if (pesquisado.equals(value)) {
                    igual = "s";
                } else {
                    conexao_agendamento.resultset.next();
                }
            }
            // nas linhas abaxo, mostra_conteudo_tabela();
            String emissao=conexao_agendamento.resultset.getString("data");
         //JOptionPane.showMessageDialog(null, emissao.substring(0,4)+"/"+emissao.substring(5,7)+"/"+emissao.substring(8,10));
            
            jt_hora.setText(conexao_agendamento.resultset.getString("hora"));
            jt_protocolo.setText(conexao_agendamento.resultset.getString("id"));
            jt_atendente.setText(conexao_agendamento.resultset.getString("atendente"));
            jt_obs.setText(conexao_agendamento.resultset.getString("obs"));
            date_agend.setValue(new  Date(emissao.substring(0,4)+"/"+emissao.substring(5,7)+"/"+emissao.substring(8,10)));
            
            //EXCLUIR ESSA LINHA SE FUNCIONAR
            //jcbPagamento.setSelectedItem(conexao_agendamento.resultset.getString("formaPagamento"));
            
            jcbCliente.setText(conexao_agendamento.resultset.getString("cliente"));
            jcbServico.setText(conexao_agendamento.resultset.getString("servico"));
            //Essas duas linhas é necesária                   

            //  preencher();                              

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Não conseguiu localizar via digitação, erro = " + erro);
        }
    }//GEN-LAST:event_table_agendamentoMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        botao_gravar.setEnabled(false);
        Date choosed = (Date) date_agend.getValue();       
        SimpleDateFormat formatador = new SimpleDateFormat("yyyy-MM-dd");                           
        try {
            String sql = "UPDATE agendamento SET data ='" +  formatador.format( choosed ) + "',"
                    + "hora = '" + jt_hora.getText() + "',"
                    + "servico = '" + jcbServico.getText()+ "',"
                    + "atendente = '" + jt_atendente.getText() + "',"
                    + "obs = '" + jt_obs.getText() + "',"
                    + "cliente = '" + jcbCliente.getText() 
                    + "' WHERE id = " + jt_protocolo.getText();
                    //JOptionPane.showMessageDialog(null, sql);

                //+ "preco = '" + jt_preco.getText() + "',"
               //+ "formaPagamento = '" + jcbPagamento.getSelectedItem() 
            
            conexao_agendamento.statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Alteração realizado com sucesso!");
            
            jt_hora.setText("");
            jt_obs.setText("");
            jt_atendente.setText("");
            //jt_preco.setText("");
            jt_protocolo.setText("");

            

            //atualiza o ResultSet
            conexao_agendamento.executaSQL("Select * from agendamento");

            conexao_agendamento.resultset.next(); //posiciona no primeiro registro
            // mostrar_dados(); //irá chamar a função em que irá mstrar os dados no form
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro a tentar Alterar o registro..." + erro);
        }
        conexaoAgendamento();
        preencherJTabelAgendamento();
         inicioPanel.preencherJTabelAgendamento(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            botao_gravar.setEnabled(true);
            jt_hora.setText("");
            jt_obs.setText("");
            jt_protocolo.setText("");
            jt_atendente.setText("");
            jcbServico.setText("");
            jcbCliente.setText("");
            //jcbPagamento.setSelectedItem("--Selecione--");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
                 try {
            String sql = "select * from agendamento Where id = " + jt_protocolo.getText();
            conexao_agendamento.executaSQL(sql);
            conexao_agendamento.resultset.first();
            String nome = "Deletar o Agendamento de: " + conexao_agendamento.resultset.getString("cliente") + " ?";
            int opcao_escolhida = JOptionPane.showConfirmDialog(null, nome, "Exclusão ", JOptionPane.YES_NO_OPTION);
            if (opcao_escolhida == JOptionPane.YES_OPTION) {
                sql = "DELETE FROM agendamento Where id =" + jt_protocolo.getText();
                int conseguiu_excluir = conexao_agendamento.statement.executeUpdate(sql);
                if (conseguiu_excluir == 1) {
                    JOptionPane.showMessageDialog(null, "Exclusão realizada com sucesso");
                    //atualiza o ResultSet
                    conexaoAgendamento();
                    preencherJTabelAgendamento();
                            botao_gravar.setEnabled(true);
                            jt_hora.setText("");
                            jt_obs.setText("");
                            jt_protocolo.setText("");
                            jt_atendente.setText("");
                            jcbServico.setText("");
                            jcbCliente.setText("");

                         
                            date_agend.setValue(new Date());
                }
            } else {
                return;
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar excluir o registro..." + erro);
        }
                  inicioPanel.preencherJTabelAgendamento(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    
    //Botão que filtra a busca por data
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       Date choosed = (Date) date_agend.getValue();       
       SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy"); 
      
        conexao_agendamento.executaSQL("select * from agendamento where data like '" + formatador.format( choosed )+ "%' order by data");
        preencherJTabelAgendamento();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         conexao_agendamento.executaSQL("select * from agendamento ");    
         preencherJTabelAgendamento();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
            new servicos().setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botao_gravar;
    private net.sf.nachocalendar.components.DateField date_agend;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextField jcbCliente;
    public static javax.swing.JTextField jcbServico;
    private javax.swing.JTextField jt_atendente;
    private javax.swing.JFormattedTextField jt_hora;
    private javax.swing.JTextArea jt_obs;
    private javax.swing.JTextField jt_protocolo;
    private javax.swing.JTable table_agendamento;
    // End of variables declaration//GEN-END:variables
public  void conexaoCliente(){
         conexao_cliente= new conexao();
         conexao_cliente.conecta();
         conexao_cliente.executaSQL("select * from clientes " );
         
    }
private void desconexaoCliente(){
        conexao_cliente.desconecta();
    }
public  void conexaoServico(){
         conexao_servico2= new conexao();
         conexao_servico2.conecta();
         conexao_servico2.executaSQL("select * from servicos order by nome" );
         
    }
public  void desconexaoServico(){
        conexao_servico2.desconecta();
    }

private void conexaoAgendamento(){
         conexao_agendamento= new conexao();
         conexao_agendamento.conecta();
         conexao_agendamento.executaSQL("select * from agendamento " );
         
    }
    private void desconexaoAgendamento(){
        conexao_agendamento.desconecta();
    }
 
  
  
  private void inserirAgendamento(){
     Date choosed = (Date) date_agend.getValue();       
       SimpleDateFormat formatador = new SimpleDateFormat("yyyy-MM-dd");                         
      
                        try{
                            String sqlinsert ="insert into agendamento (data,hora,cliente,servico,atendente,obs) values ('"+
                                       formatador.format( choosed )+"','"+
                                        jt_hora.getText()+"','"+
                                        jcbCliente.getText()+"','"+
                                        jcbServico.getText()+"','"+
                                        jt_atendente.getText()+"','"+
                                        jt_obs.getText()+"')";
                                        //jt_preco.getText()+"','"+ 
                                        //jcbPagamento.getSelectedItem()+"','"+
                                        
                            
                           //JOptionPane.showMessageDialog(null,sqlinsert);
                            
                            conexao_agendamento.statement.executeUpdate(sqlinsert);
                            JOptionPane.showMessageDialog(null, "Gravação Realizada com sucesso");
                            
                            jt_hora.setText("");
                            jt_obs.setText("");
                            jt_atendente.setText("");
                            //jt_preco.setText("");
                            jt_protocolo.setText("");

                        } 
                        catch(SQLException erro){
                            System.out.println(erro);
                            JOptionPane.showMessageDialog(null,"Não gravou" + erro);

                        }
    }
  
  
  
  public void preencherJTabelAgendamento() {        
        table_agendamento.getColumnModel().getColumn(0).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(1).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(2).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(3).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(4).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(5).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(6).setPreferredWidth(50);
        
        
       
        modeloagendamento = (DefaultTableModel) table_agendamento.getModel();
        modeloagendamento.setNumRows(0);
        
        DefaultTableCellRenderer numeros =
                new DefaultTableCellRenderer() {
                    
                    public void setValue(Object value) {
                        //setBackground(new Color(238, 238, 238));
                        setFont(new Font("Arial", Font.BOLD /*+ Font.ITALIC*/, 12));
                        super.setValue(value);
                    }
                };
        table_agendamento.getColumnModel().getColumn(1).setCellRenderer(numeros);
        try {            
            while (conexao_agendamento.resultset.next()) {
                    String data = conexao_agendamento.resultset.getString("data");
                    String data2=data.substring(8,10)+"/"+data.substring(5,7)+"/"+data.substring(0,4);
                    
                    modeloagendamento.addRow(new Object[]{
                    conexao_agendamento.resultset.getString("id"),
                    data2,
                    conexao_agendamento.resultset.getString("hora"),
                    conexao_agendamento.resultset.getString("cliente"),
                    conexao_agendamento.resultset.getString("servico"),
                    conexao_agendamento.resultset.getString("atendente"),
                    conexao_agendamento.resultset.getString("obs")});
                    
            }
            conexao_agendamento.resultset.first();
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao listar no JTable " + erro);
        }
                
        
        
    }
 
}
