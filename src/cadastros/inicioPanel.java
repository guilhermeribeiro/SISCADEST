/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cadastros;


import java.awt.Font;
import java.awt.Point;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import mysql.conexao;


/**
 *
 * @author Alan
 */
public class inicioPanel extends javax.swing.JPanel {

    private static conexao conexao_agendamento,conexao_aniver;
     private static DefaultTableModel modeloagendamento,modeloaniver;
    /**
     * Creates new form inicioPanel
     */
    public inicioPanel() {
        
        
        initComponents();
        
        jPanel2.show(false);
        date_agend.show(false);
        jButton1.show(false);
        jButton5.show(false);
       
        preencherJTabelAgendamento(0);
        
        preencherJTabelAniver();
    }
    
   /* imagem = new ImageIcon(getClass().getResource("caminho da imagem"));  
    seuPanel = new JPAnel(){  
        protected void paintComponent( Graphics g ){  
                super.paintComponent(g);  
                imagem.paintIcon(this,g,20,20);  
        }  */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new JPanel();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        date_agend = new net.sf.nachocalendar.components.DateField();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_agendamento = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_aniver = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Alerta de Fim de Estoque"));

        //	jp = jp.paintComponent("imagens/logo3.jpg");

        jButton5.setText("Mostrar todos");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton1.setText("Filtrar por data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(date_agend, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(date_agend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        table_agendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item_id", "Nome", "Descrição", "Qtde Mínima", "Qtde em Estoque"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_agendamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_agendamentoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_agendamento);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(137, Short.MAX_VALUE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Aniversariantes"));
        jPanel2.setMaximumSize(new java.awt.Dimension(200, 600));

        jScrollPane1.setMaximumSize(new java.awt.Dimension(200, 600));

        table_aniver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "E-mail", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_aniver);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void table_agendamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_agendamentoMouseClicked
       
         
    }//GEN-LAST:event_table_agendamentoMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         Date choosed = (Date) date_agend.getValue();       
       SimpleDateFormat formatador = new SimpleDateFormat("yyyy-MM-dd"); 
       
      conexao_agendamento.executaSQL("select it.item_id, it.item_nome, it.item_descricao, it.quantidade_minima, \n" +
"ei.quantidade_item\n" +
" from itens it\n" +
"inner join estoque_itens ei on ei.item_id = it.item_id\n" +
"where ei.quantidade_item < it.quantidade_minima\n" +
"order by it.item_id");
        //conexao_agendamento.executaSQL("select * from agendamento where data like '" + formatador.format( choosed )+ "%' order by data");
        preencherJTabelAgendamento(1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //conexao_agendamento.executaSQL("select * from agendamento ");
        preencherJTabelAgendamento(0);
    }//GEN-LAST:event_jButton5ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private net.sf.nachocalendar.components.DateField date_agend;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable table_agendamento;
    public static javax.swing.JTable table_aniver;
    // End of variables declaration//GEN-END:variables
public static  void preencherJTabelAgendamento(int a) {
        if (a==0)conexaoAgendamento();
        
        table_agendamento.getColumnModel().getColumn(0).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(1).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(2).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(3).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(4).setPreferredWidth(50);
        
        
        
        
       
        modeloagendamento = (DefaultTableModel) table_agendamento.getModel();
        modeloagendamento.setNumRows(0);
        
        DefaultTableCellRenderer numeros =
                new DefaultTableCellRenderer() {
                    
                    public void setValue(Object value) {
                        //setBackground(new Color(238, 238, 238));
                        setFont(new Font("Arial", Font.BOLD /*+ Font.ITALIC*/, 12));
                        super.setValue(value);
                    }
                };
        table_agendamento.getColumnModel().getColumn(1).setCellRenderer(numeros);
        try {            
            while (conexao_agendamento.resultset.next()) {
                    //String data = conexao_agendamento.resultset.getString("data");
                    //String data2=data.substring(8,10)+"/"+data.substring(5,7)+"/"+data.substring(0,4);
                    modeloagendamento.addRow(new Object[]{
                    conexao_agendamento.resultset.getString("it.item_id"),
                    conexao_agendamento.resultset.getString("it.item_nome"),
                    conexao_agendamento.resultset.getString("it.item_descricao"),
                    conexao_agendamento.resultset.getString("it.quantidade_minima"),
                    conexao_agendamento.resultset.getString("ei.quantidade_item")});
                    
            }
            conexao_agendamento.resultset.first();
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao listar no JTable " + erro);
        }
                
        
        
    }

public static void preencherJTabelAniver() {   
    
        Date hoje = new Date();
        SimpleDateFormat formatador = new SimpleDateFormat("dd");  
            SimpleDateFormat formatador2 = new SimpleDateFormat("MM");  
        String dia= formatador.format(hoje);
        String mes= formatador2.format(hoje);
        
        conexaoAniver(dia, mes);
        
        table_aniver.getColumnModel().getColumn(0).setPreferredWidth(50);
        
        
        modeloaniver = (DefaultTableModel) table_aniver.getModel();
        modeloaniver.setNumRows(0);
        
        DefaultTableCellRenderer numeros =
                new DefaultTableCellRenderer() {
                    
                    public void setValue(Object value) {
                        //setBackground(new Color(238, 238, 238));
                        setFont(new Font("Arial", Font.BOLD /*+ Font.ITALIC*/, 12));
                        super.setValue(value);
                    }
                };
        table_aniver.getColumnModel().getColumn(0).setCellRenderer(numeros);
        try {            
            while (conexao_aniver.resultset.next()) {
               
                    modeloaniver.addRow(new Object[]{
                        conexao_aniver.resultset.getString("nome"),
                        conexao_aniver.resultset.getString("telefonefixo"),
                        conexao_aniver.resultset.getString("email")});
                    
            }
            conexao_aniver.resultset.first();
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao listar no JTable " + erro);
        }
                
        
        
    }
private static void conexaoAgendamento(){
         conexao_agendamento= new conexao();
         conexao_agendamento.conecta();
         conexao_agendamento.executaSQL("select it.item_id, it.item_nome, it.item_descricao, it.quantidade_minima, \n" +
"ei.quantidade_item\n" +
" from itens it\n" +
"inner join estoque_itens ei on ei.item_id = it.item_id\n" +
"where ei.quantidade_item < it.quantidade_minima\n" +
"order by it.item_id");
         
    }
 
 
public static void conexaoAniver(String  dia,String mes){
         conexao_aniver= new conexao();
         conexao_aniver.conecta();
         String sql ="select * from clientes where dtNasc like '" +dia+"/"+mes+ "%' order by " + "nome"; 
        // JOptionPane.showMessageDialog(null,sql);
         conexao_aniver.executaSQL(sql );
         
    }

}
