/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cadastros;

import java.awt.ComponentOrientation;
import java.awt.Font;
import java.awt.List;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import javax.swing.text.NumberFormatter;
import mysql.conexao;

/**
 *
 * @author guilhermeribeiro
 */
public class itensEstoque extends javax.swing.JPanel {

    private MaskFormatter ftmData;
    private JFormattedTextField jt_dtNasc1;
    private conexao conexao_itens;
    private conexao conexao_unidade_medida;
    private conexao conexao_itens_estoque;
    private conexao conexao_itens_armazenados;
    private MaskFormatter ftmPreco;
    private DefaultTableModel modeloitensestq;
    int pos = 11;

    /**
     * Creates new form itensEstoque
     */
    public itensEstoque() {
        initComponents();
        jt_Preco.setText("        0,00");
        salvarItens.setEnabled(false);
        removerItem.setEnabled(false);
        atualizaItens.setEnabled(false);
        cmbCodItem.setEditable(false);
        cmbCodItem.setEnabled(false);
        jt_UnidMed.setEnabled(false);
        jt_Prod.setEnabled(false);
        
        conexaoItensEstoque();
        preencherJTabelItensEstoque();
        
        
        try{
            ArrayList<String> groupNames = new ArrayList<String>();
            conexaoItens();
            while (conexao_itens.resultset.next()) { 
                String groupName = conexao_itens.resultset.getString("item_id"); 
                groupNames.add(groupName);
            } 
            // Populate the combo box
            DefaultComboBoxModel model = new DefaultComboBoxModel(groupNames.toArray());
            cmbCodItem.setModel(model);
        }
        catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Não foi possível carregar a combo com os Itens, erro = " + erro);
        }
    }
    
    private void conexaoItens(){
        conexao_itens= new conexao();
        conexao_itens.conecta();
        conexao_itens.executaSQL("select item_id from itens order by item_id");

    }
    
    private void conexaoItensEstoque(){
        conexao_itens_estoque= new conexao();
        conexao_itens_estoque.conecta();
        conexao_itens_estoque.executaSQL("select * from entrada_estoque");

    }
    
    private void conexaoItensArmazenados(){
        conexao_itens_armazenados= new conexao();
        conexao_itens_armazenados.conecta();
        conexao_itens_armazenados.executaSQL("select * from estoque_itens");

    }
    
    private void conexaoUnidadeMedida(){
        conexao_unidade_medida= new conexao();
        conexao_unidade_medida.conecta();
        conexao_unidade_medida.executaSQL("select * from unidade_medida");

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jt_nomePesquisar = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jt_codPesquisar = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jt_Prod = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jt_Nf = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        try {    ftmData = new MaskFormatter("##/##/####"); } catch (ParseException e) {     e.printStackTrace(); }
        jt_dtNasc1 = new javax.swing.JFormattedTextField();
        jt_dtNasc1 = new JFormattedTextField(ftmData);
        jLabel12 = new javax.swing.JLabel();
        jt_Qtde = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbCodItem = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jt_UnidMed = new javax.swing.JTextField();
        jt_Preco = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jt_Forn = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableItemEstoque = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        salvarItens = new javax.swing.JButton();
        atualizaItens = new javax.swing.JButton();
        removerItem = new javax.swing.JButton();

        jPanel6.setBackground(new java.awt.Color(51, 51, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar por:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("NF:");

        jt_nomePesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jt_nomePesquisarActionPerformed(evt);
            }
        });

        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Codigo:");

        jt_codPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jt_codPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jt_codPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                    .addComponent(jt_nomePesquisar))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jt_nomePesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jt_codPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Item"));

        jLabel14.setText("Código do Produto:");

        jt_Prod.setText(" ");

        jLabel4.setText("Nome do Produto:");

        jt_Nf.setText(" ");

        jLabel15.setText("Número da Nota Fiscal");

        jLabel12.setText("Data de Validade:");

        jt_Qtde.setText(" ");

        jLabel6.setText("Quantidade Comprada:");

        jLabel7.setText("Unidade de Medida:");

        //cmbCodItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCodItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCodItemItemStateChanged(evt);
            }
        });

        jLabel8.setText("Preço da Compra do Item (R$):");

        jt_UnidMed.setText(" ");

        jt_Preco.setText(" ");
        jt_Preco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jt_PrecoFocusGained(evt);
            }
        });
        jt_Preco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt_PrecoKeyTyped(evt);
            }
        });

        jLabel5.setText("Fornecedor:");

        jt_Forn.setText(" ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jt_Nf))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jt_Qtde, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jt_Preco, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jt_UnidMed, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(32, 32, 32))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cmbCodItem, 0, 168, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jt_Prod, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jt_Forn, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jt_dtNasc1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel4)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jt_Prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jt_dtNasc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbCodItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jt_Forn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jt_Nf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(34, 34, 34))
                                .addComponent(jt_Preco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jt_Qtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jt_UnidMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens Cadastrados"));

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        tableItemEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nota Fiscal", "Código", "Preço", "Quantidade Comprada", "Data da Compra"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableItemEstoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableItemEstoqueMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableItemEstoque);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jButton1.setText("Novo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        salvarItens.setText("Salvar");
        salvarItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarItensActionPerformed(evt);
            }
        });

        atualizaItens.setText("Editar");
        atualizaItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaItensActionPerformed(evt);
            }
        });

        removerItem.setText("Remover");
        removerItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(salvarItens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(atualizaItens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removerItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(416, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(salvarItens)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atualizaItens)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removerItem))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jt_nomePesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jt_nomePesquisarActionPerformed
        conexao_itens_estoque.executaSQL("select * from entrada_estoque where numero_nota_fiscal like '" + jt_nomePesquisar.getText() + "%' order by numero_nota_fiscal");
        preencherJTabelItensEstoque();
    }//GEN-LAST:event_jt_nomePesquisarActionPerformed

    private void jt_codPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jt_codPesquisarActionPerformed
        conexao_itens_estoque.executaSQL("select * from entrada_estoque where item_id like '" + jt_codPesquisar.getText() + "%' order by item_id");
        preencherJTabelItensEstoque();
    }//GEN-LAST:event_jt_codPesquisarActionPerformed

    private void tableItemEstoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableItemEstoqueMouseClicked
        removerItem.setEnabled(true);
        atualizaItens.setEnabled(true);
        salvarItens.setEnabled(false);
        cmbCodItem.setEditable(false);
        cmbCodItem.setEnabled(false);
        jt_Nf.setEnabled(false);
        
        //salvarLancamentoProducao.setEnabled(false);
        
        Point click = new Point(evt.getX(), evt.getY());

        int column = tableItemEstoque.columnAtPoint(click);
        int row = tableItemEstoque.rowAtPoint(click);
        String value = String.valueOf(tableItemEstoque.getValueAt(row, 0));
        String value2 = String.valueOf(tableItemEstoque.getValueAt(row, 1));
        try {
            conexao_itens_estoque.resultset.first();
            String igual = "n";
            while (igual == "n") {
                String pesquisado = conexao_itens_estoque.resultset.getString("numero_nota_fiscal");//.substring(0,(tamanho_pesquisa));
                String pesquisado_2 = conexao_itens_estoque.resultset.getString("item_id");
                
                if (pesquisado.equals(value) && pesquisado_2.equals(value2)) {
                    igual = "s";
                } else {
                    conexao_itens_estoque.resultset.next();
                }
            }
            
            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
            
            String dbData = sdf.format(conexao_itens_estoque.resultset.getTimestamp(4));
            
            jt_Nf.setText(conexao_itens_estoque.resultset.getString("numero_nota_fiscal"));
            jt_Qtde.setText(conexao_itens_estoque.resultset.getString("quantidade_itens"));
            jt_Preco.setText(conexao_itens_estoque.resultset.getString("preco_item").replace('.', ','));
            jt_Forn.setText(conexao_itens_estoque.resultset.getString("item_fornecedor"));
            
            //System.out.println(conexao_itens.resultset.getString("unidade_medida_id"));
            
            cmbCodItem.setSelectedItem(conexao_itens_estoque.resultset.getString("item_id"));
            jt_dtNasc1.setText(dbData);
            
            
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Não conseguiu localizar via digitação, erro = " + erro);
        }
        //jt_Cod.setEditable(true);
    }//GEN-LAST:event_tableItemEstoqueMouseClicked

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        salvarItens.setEnabled(true);
        removerItem.setEnabled(false);
        atualizaItens.setEnabled(false);
        cmbCodItem.setEnabled(true);
        jt_Nf.setEnabled(true);

        java.util.Date dt = new java.util.Date();

        java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");

        String currentTime = sdf.format(dt);

        jt_Nf.setText("");
        jt_UnidMed.setText("");
        jt_Qtde.setText("");
        jt_Prod.setText("");
        jt_Preco.setText("        0,00");
        jt_Prod.setText("");
        jt_UnidMed.setText("");
        cmbCodItem.setSelectedIndex(0);
        jt_dtNasc1.setText(currentTime);  
            
        try {
                String sql = "select * from itens Where item_id = '" + cmbCodItem.getSelectedItem()+ "'";
                conexao_itens.executaSQL(sql);
                conexao_itens.resultset.first();

                jt_Prod.setText(conexao_itens.resultset.getString("item_nome"));

                String unidMed = "select unidade_medida_descricao from unidade_medida Where unidade_medida_id = '" + 
                        conexao_itens.resultset.getString("unidade_medida_id") + "'";

                conexao_itens.executaSQL(unidMed);
                conexao_itens.resultset.first();

                jt_UnidMed.setText(conexao_itens.resultset.getString("unidade_medida_descricao"));
        } catch (SQLException ex) {
            Logger.getLogger(itensEstoque.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void salvarItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarItensActionPerformed
        inserirItensEstoque();
        conexaoItensEstoque();
        preencherJTabelItensEstoque();
    }//GEN-LAST:event_salvarItensActionPerformed
                              
    
    private void atualizaItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaItensActionPerformed
        try {

            //# ATUALIZAR DATA CONFORME DATA ATUAL
            java.util.Date dt = new java.util.Date();

            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");

            String currentTime = sdf.format(dt);

            java.text.SimpleDateFormat sdf1 = new java.text.SimpleDateFormat("dd/MM/yyyy");
            Date currentDate = sdf1.parse(jt_dtNasc1.getText());

            java.text.SimpleDateFormat sdf2 = new java.text.SimpleDateFormat("yyyy-MM-dd");
            String date = sdf2.format(currentDate);

            String sql = "UPDATE entrada_estoque SET preco_item ='" + jt_Preco.getText().replace(',', '.') + "',"
            + "quantidade_itens = '" + jt_Qtde.getText() + "',"
            + "item_fornecedor = '" + jt_Forn.getText() + "',"
            + "data_nota_fiscal = '" + date 
            + "' WHERE item_id = '" + cmbCodItem.getSelectedItem() + "' and"
                    + " numero_nota_fiscal ='" + jt_Nf.getText() + "'";
            conexao_itens_estoque.statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Alteração realizada com sucesso!");

            //atualiza o ResultSet
            conexao_itens_estoque.executaSQL("Select * from entrada_estoque");

            conexao_itens_estoque.resultset.next(); //posiciona no primeiro registro
            // mostrar_dados(); //irá chamar a função em que irá mstrar os dados no form
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro a tentar Alterar o registro..." + erro);
        } catch (ParseException ex) {
            Logger.getLogger(itensPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        //inicioPanel.preencherJTabelAniver();
        conexaoItensEstoque();
        preencherJTabelItensEstoque();
    }//GEN-LAST:event_atualizaItensActionPerformed

    private void removerItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerItemActionPerformed
        try {
            int row = tableItemEstoque.getSelectedRow();

            String sql = "select * from entrada_estoque Where item_id = '" + cmbCodItem.getSelectedItem()+ "' and numero_nota_fiscal = '" 
                    + jt_Nf.getText() + "'";
            conexao_itens_estoque.executaSQL(sql);
            conexao_itens_estoque.resultset.first();
            String nome = "Deletar o Item : " + conexao_itens_estoque.resultset.getString("item_id") + " da NF: " +
                    conexao_itens_estoque.resultset.getString("numero_nota_fiscal") + "?";
            int opcao_escolhida = JOptionPane.showConfirmDialog(null, nome, "Exclusão ", JOptionPane.YES_NO_OPTION);
            if (opcao_escolhida == JOptionPane.YES_OPTION) {
                sql = "DELETE FROM entrada_estoque Where item_id ='" + cmbCodItem.getSelectedItem()+ "' and numero_nota_fiscal = '" 
                    + jt_Nf.getText() + "'";
                int conseguiu_excluir = conexao_itens_estoque.statement.executeUpdate(sql);
                if (conseguiu_excluir == 1) {
                    JOptionPane.showMessageDialog(null, "Exclusão realizada com sucesso");
                    //atualiza o ResultSet
                    conexaoItensEstoque();
                    preencherJTabelItensEstoque();

                    java.util.Date dt = new java.util.Date();

                    java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");

                    String currentTime = sdf.format(dt);

                    jt_Preco.setText("");
                    jt_Prod.setText("");
                    jt_Nf.setText("");
                    jt_Qtde.setText("");
                    jt_Prod.setText("");
                    jt_UnidMed.setText("");
            
                    jt_dtNasc1.setText(currentTime);
                }
            } else {
                return;
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro a tentar excluir o registro: " + erro);
        }
    }//GEN-LAST:event_removerItemActionPerformed

    private void inserirItensEstoque() {
            try{
                java.text.SimpleDateFormat sdf1 = new java.text.SimpleDateFormat("dd/MM/yyyy");
                Date currentDate = sdf1.parse(jt_dtNasc1.getText());

                java.text.SimpleDateFormat sdf2 = new java.text.SimpleDateFormat("yyyy-MM-dd");
                String date = sdf2.format(currentDate);
                
                //System.out.println(cmbValue);
                
                String sqlinsert ="insert into entrada_estoque (numero_nota_fiscal," +
                "preco_item," +
                "quantidade_itens," +
                "data_nota_fiscal," +
                "item_id," + 
                "item_fornecedor"        + ") values ('"+
                            jt_Nf.getText()+"','"+
                            jt_Preco.getText().replace(",", ".")+"','"+
                            jt_Qtde.getText()+"','"+
                            date +"','"+
                            cmbCodItem.getSelectedItem() +"','"+
                            jt_Forn.getText() + "')";

                conexao_itens.statement.executeUpdate(sqlinsert);
                
                conexaoItensArmazenados();
                
                conexao_itens_armazenados.executaSQL("select count(*) as x from estoque_itens where item_id = '"
                        + cmbCodItem.getSelectedItem() +"'");
                
                conexao_itens_armazenados.resultset.next();
                
                long teste = conexao_itens_armazenados.resultset.getLong("x");
                
                    if (teste == 0)
                    {
                        conexao_itens_armazenados.statement.executeUpdate("insert into estoque_itens values ('"+ cmbCodItem.getSelectedItem() + "','"+
                        jt_Qtde.getText()+"')");
                    }
                    else
                    {
                        conexao_itens_armazenados.executaSQL("select quantidade_item from estoque_itens where item_id = '"
                        + cmbCodItem.getSelectedItem() +"'");
                        
                        conexao_itens_armazenados.resultset.next();
                        
                        double qtde = conexao_itens_armazenados.resultset.getDouble("quantidade_item");
                        
                        qtde = qtde + Double.parseDouble(jt_Qtde.getText().toString());
                        
                        conexao_itens_armazenados.statement.executeUpdate("update estoque_itens set quantidade_item ='" + 
                        qtde+"' where item_id ='" + cmbCodItem.getSelectedItem() + "'");
                    }
                   
                JOptionPane.showMessageDialog(null, "Gravação Realizada com sucesso");

            } 
            catch(SQLException erro){
                //System.out.println(erro);
                JOptionPane.showMessageDialog(null,"A gravação não foi realizada. Motivo: " + erro);

            } catch (ParseException ex) { 
                JOptionPane.showMessageDialog(null,"Problemas para Salvar a Data da Nota Fiscal!");
        }
        cmbCodItem.setEditable(false);
        cmbCodItem.setEnabled(false);
    }
    
    private void cmbCodItemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCodItemItemStateChanged
        try {

            String sql = "select * from itens Where item_id = '" + cmbCodItem.getSelectedItem()+ "'";
            conexao_itens.executaSQL(sql);
            conexao_itens.resultset.first();
            
            jt_Prod.setText(conexao_itens.resultset.getString("item_nome"));
            
            String unidMed = "select unidade_medida_descricao from unidade_medida Where unidade_medida_id = '" + 
                    conexao_itens.resultset.getString("unidade_medida_id") + "'";
            
            conexao_itens.executaSQL(unidMed);
            conexao_itens.resultset.first();
            
            jt_UnidMed.setText(conexao_itens.resultset.getString("unidade_medida_descricao"));
            
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro a tentar excluir o registro: " + erro);
        }
    }//GEN-LAST:event_cmbCodItemItemStateChanged

    private void jt_PrecoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt_PrecoKeyTyped
        char[] valor = jt_Preco.getText().toCharArray();       
        
        if(evt.getKeyChar()=='\b')
        {
            jt_Preco.setText("        0,00");
            pos = 11;
            jt_Preco.setEditable(false);
            return;
        }
        
        if(pos == 9)
            pos--;
        
        if(pos < 0)
            return;        
        
        for (int i = 0; i < valor.length-1; i++) {
            if(valor[i+1] == ','){
                if(i < 8)
                    valor[i] = valor[i+2] == '0'? ' ': valor[i+2];
                else valor[i] = valor[i+2];
                i++;
            }
            else
                if(i < 8)
                    valor[i] = valor[i+1] == '0'? ' ': valor[i+1];
                else valor[i] = valor[i+1];
        }
        
        valor[valor.length-1] = evt.getKeyChar();
        pos--;
        jt_Preco.setEditable(false);
        
        String text = String.valueOf(valor);
        //System.out.println(text);
        
        jt_Preco.setText(text);
    }//GEN-LAST:event_jt_PrecoKeyTyped

    private void jt_PrecoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jt_PrecoFocusGained
        pos = 11;
    }//GEN-LAST:event_jt_PrecoFocusGained

    public void preencherJTabelItensEstoque() {
        tableItemEstoque.getColumnModel().getColumn(0).setPreferredWidth(100);
        tableItemEstoque.getColumnModel().getColumn(1).setPreferredWidth(100);
        tableItemEstoque.getColumnModel().getColumn(2).setPreferredWidth(100);
        tableItemEstoque.getColumnModel().getColumn(3).setPreferredWidth(100);
        tableItemEstoque.getColumnModel().getColumn(4).setPreferredWidth(100);
        
        modeloitensestq = (DefaultTableModel) tableItemEstoque.getModel();
        modeloitensestq.setNumRows(0);
        
        DefaultTableCellRenderer numeros =
                new DefaultTableCellRenderer() {
                    
                    public void setValue(Object value) {
                        //setBackground(new Color(238, 238, 238));
                        setFont(new Font("Arial", Font.BOLD /*+ Font.ITALIC*/ , 12));
                        super.setValue(value);
                    }
                };
        tableItemEstoque.getColumnModel().getColumn(1).setCellRenderer(numeros);
        try {            
            while (conexao_itens_estoque.resultset.next()) {
                    modeloitensestq.addRow(new Object[]{
                    conexao_itens_estoque.resultset.getString("numero_nota_fiscal"),
                    conexao_itens_estoque.resultset.getString("item_id"),
                    conexao_itens_estoque.resultset.getString("preco_item"),
                    conexao_itens_estoque.resultset.getString("quantidade_itens"),
                    conexao_itens_estoque.resultset.getString("data_nota_fiscal")});
            }
            
            conexao_itens_estoque.resultset.first();
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao listar no JTable " + erro);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizaItens;
    private javax.swing.JComboBox<String> cmbCodItem;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jt_Forn;
    private javax.swing.JTextField jt_Nf;
    private javax.swing.JTextField jt_Preco;
    private javax.swing.JTextField jt_Prod;
    private javax.swing.JTextField jt_Qtde;
    private javax.swing.JTextField jt_UnidMed;
    private javax.swing.JTextField jt_codPesquisar;
    //private javax.swing.JFormattedTextField jt_dtNasc1;
    private javax.swing.JTextField jt_nomePesquisar;
    private javax.swing.JButton removerItem;
    private javax.swing.JButton salvarItens;
    private javax.swing.JTable tableItemEstoque;
    // End of variables declaration//GEN-END:variables
}
