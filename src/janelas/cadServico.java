/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package janelas;

import cadastros.inicioPanel;
import java.awt.Font;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.awt.Point;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import mysql.conexao;

/**
 *
 * @author guilherme_nightmare
 */
public class cadServico extends javax.swing.JFrame {
    String Cliente;
    private conexao conexao_servico;
    double valorTotal;
    private DefaultTableModel modeloagendamento;
    
    public cadServico() {
        initComponents();
    }

    public cadServico(String Cliente2) {
        initComponents();
        setLocationRelativeTo(null);//localiza onde irá aparecer a tela
        setResizable(false);//proibido redimensionar ou naum
        Cliente= Cliente2;
        jt_cliente.setText(Cliente);
        conexaoServico();
        preencherJTabelAgendamento();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jt_cliente = new javax.swing.JTextField();
        jt_servico = new javax.swing.JTextField();
        jt_preco = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jl_logo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbPagamento = new javax.swing.JComboBox();
        date_serv = new net.sf.nachocalendar.components.DateField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_agendamento = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jt_cod = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jt_valor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jt_cliente.setEditable(false);

        jButton1.setText("Gravar Registro");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Cliente:");

        jLabel2.setText("Serviço:");

        jLabel3.setText("Preço (R$):");

        jl_logo.setIcon(new ImageIcon("imagens/logo.jpg"));

        jLabel4.setText("Data de Realização:");

        jLabel5.setText("Forma de Pagamento:");

        jcbPagamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Selecione--", "Dinheiro", "Cartão" }));
        jcbPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPagamentoActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Serviços"));

        table_agendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Cliente", "Data", "Serviço", "Preço (R$)", "Forma de Pagamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_agendamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_agendamentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_agendamento);

        jButton2.setText("Atualizar Registro");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Remover Registro");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Novo Registro");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setText("Código do Serviço:");

        jt_cod.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Monotype Sorts", 1, 24)); // NOI18N
        jLabel7.setText("Serviços Realizados pelo Cliente");

        jLabel8.setText("Valor Total (R$):");

        jt_valor.setEditable(false);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel8)
                        .add(18, 18, 18)
                        .add(jt_valor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(42, 42, 42)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel3)
                                    .add(layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                            .add(jLabel1)
                                            .add(jLabel2))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(layout.createSequentialGroup()
                                                .add(jt_servico, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 234, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(170, 170, 170)
                                                .add(jLabel4))
                                            .add(layout.createSequentialGroup()
                                                .add(jt_cliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 390, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(18, 18, 18)
                                                .add(jLabel6)))))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(0, 0, Short.MAX_VALUE)
                                        .add(date_serv, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jt_cod)))
                            .add(layout.createSequentialGroup()
                                .add(128, 128, 128)
                                .add(jt_preco, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 149, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel5)
                                .add(18, 18, 18)
                                .add(jcbPagamento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 177, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 791, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(jl_logo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 438, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(85, 85, 85)))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 136, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(16, 16, 16)
                        .add(jl_logo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(38, 38, 38)
                        .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(33, 33, 33)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jt_cliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(jt_cod, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel2)
                        .add(jt_servico, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jLabel4))
                    .add(date_serv, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel5)
                            .add(jcbPagamento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jt_preco, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel3))))
                .add(20, 20, 20)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jButton1)
                        .add(12, 12, 12)
                        .add(jButton2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton4))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 222, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(jt_valor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        conexaoServico();
        inserirServico();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jcbPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPagamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbPagamentoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jButton1.setEnabled(false);
        Date choosed = (Date) date_serv.getValue();       
        SimpleDateFormat formatador = new SimpleDateFormat("yyyy-MM-dd");                           
        try {
            String sql = "UPDATE servicos SET nome ='" + jt_servico.getText() + "',"
                    + "preco ='" + jt_preco.getText()  + "',"
                    + "nomecliente = '" + jt_cliente.getText() + "',"
                    + "formaPagamento = '" + jcbPagamento.getSelectedItem()+ "',"
                    + "data ='" +  formatador.format( choosed )
                    + "' WHERE cod = " + jt_cod.getText();
                    //JOptionPane.showMessageDialog(null, sql);

                //+ "preco = '" + jt_preco.getText() + "',"
               //+ "formaPagamento = '" + jcbPagamento.getSelectedItem() 
            
            conexao_servico.statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Alteração realizado com sucesso!");
            
            jt_preco.setText("");
            jt_servico.setText("");
            jt_cod.setText("");
            //jt_preco.setText("");
            jcbPagamento.setSelectedItem("--Selecione--");

            

            //atualiza o ResultSet
            conexao_servico.executaSQL("select * from servicos where nomecliente= '"+Cliente+"'");

            conexao_servico.resultset.next(); //posiciona no primeiro registro
            // mostrar_dados(); //irá chamar a função em que irá mstrar os dados no form
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro a tentar Alterar o registro..." + erro);
        }
        conexaoServico();
        preencherJTabelAgendamento();
         inicioPanel.preencherJTabelAgendamento(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            String sql = "select * from servicos Where cod = " + jt_cod.getText();
            conexao_servico.executaSQL(sql);
            conexao_servico.resultset.first();
            String nome = "Deletar o Serviço " + conexao_servico.resultset.getString("nome") + " deste cliente?";
            int opcao_escolhida = JOptionPane.showConfirmDialog(null, nome, "Exclusão ", JOptionPane.YES_NO_OPTION);
            if (opcao_escolhida == JOptionPane.YES_OPTION) {
                sql = "DELETE FROM servicos Where cod =" + jt_cod.getText();
                int conseguiu_excluir = conexao_servico.statement.executeUpdate(sql);
                if (conseguiu_excluir == 1) {
                    JOptionPane.showMessageDialog(null, "Exclusão realizada com sucesso");
                    //atualiza o ResultSet
                    conexaoServico();
                    preencherJTabelAgendamento();
                            jButton1.setEnabled(true);
                            //jt_cliente.setText("");
                            jt_preco.setText("");
                            jt_servico.setText("");
                            jt_cod.setText("");
                            jcbPagamento.setSelectedItem("--Selecione--");
                            //jcbCliente.setText("");

                         
                            date_serv.setValue(new Date());
                }
            } else {
                return;
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar excluir o registro..." + erro);
        }
                  inicioPanel.preencherJTabelAgendamento(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
            jt_preco.setText("");
            jt_servico.setText("");
            jt_cod.setText("");
            //jt_preco.setText("");
            jcbPagamento.setSelectedItem("--Selecione--");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void table_agendamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_agendamentoMouseClicked
        Point click = new Point(evt.getX(), evt.getY());

        int column = table_agendamento.columnAtPoint(click);
        int row = table_agendamento.rowAtPoint(click);
        String value = String.valueOf(table_agendamento.getValueAt(row, 0));
        
        //botão gravar
        jButton1.setEnabled(false);

        try {
            conexao_servico.resultset.first();
            String igual = "n";
            while (igual == "n") {
                String pesquisado = conexao_servico.resultset.getString("cod");//.substring(0,(tamanho_pesquisa));
                if (pesquisado.equals(value)) {
                    igual = "s";
                } else {
                    conexao_servico.resultset.next();
                }
            }
            // nas linhas abaxo, mostra_conteudo_tabela();
            String emissao=conexao_servico.resultset.getString("data");
         //JOptionPane.showMessageDialog(null, emissao.substring(0,4)+"/"+emissao.substring(5,7)+"/"+emissao.substring(8,10));
            
            jt_cliente.setText(conexao_servico.resultset.getString("nomecliente"));
            jt_servico.setText(conexao_servico.resultset.getString("nome"));
            jt_preco.setText(conexao_servico.resultset.getString("preco"));
            jt_cod.setText(conexao_servico.resultset.getString("cod"));
            jcbPagamento.setSelectedItem(conexao_servico.resultset.getString("formaPagamento"));
            date_serv.setValue(new  Date(emissao.substring(0,4)+"/"+emissao.substring(5,7)+"/"+emissao.substring(8,10)));
            
            //EXCLUIR ESSA LINHA SE FUNCIONAR
            //jcbPagamento.setSelectedItem(conexao_agendamento.resultset.getString("formaPagamento"));
            
            //jcbCliente.setText(conexao_agendamento.resultset.getString("cliente"));
            //jcbServico.setText(conexao_agendamento.resultset.getString("servico"));
            //Essas duas linhas é necesária                   

            //  preencher();                              

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Não conseguiu localizar via digitação, erro = " + erro);
        }
    }//GEN-LAST:event_table_agendamentoMouseClicked

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cadServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cadServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cadServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cadServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new cadServico().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private net.sf.nachocalendar.components.DateField date_serv;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcbPagamento;
    private javax.swing.JLabel jl_logo;
    private javax.swing.JTextField jt_cliente;
    private javax.swing.JTextField jt_cod;
    private javax.swing.JTextField jt_preco;
    private javax.swing.JTextField jt_servico;
    private javax.swing.JTextField jt_valor;
    private javax.swing.JTable table_agendamento;
    // End of variables declaration//GEN-END:variables

      public void preencherJTabelAgendamento() {        
        table_agendamento.getColumnModel().getColumn(0).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(1).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(2).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(3).setPreferredWidth(50);
        table_agendamento.getColumnModel().getColumn(4).setPreferredWidth(50);
       
        modeloagendamento = (DefaultTableModel) table_agendamento.getModel();
        modeloagendamento.setNumRows(0);
        
        DefaultTableCellRenderer numeros =
                new DefaultTableCellRenderer() {
                    
                    public void setValue(Object value) {
                        //setBackground(new Color(238, 238, 238));
                        setFont(new Font("Arial", Font.BOLD /*+ Font.ITALIC*/, 12));
                        super.setValue(value);
                    }
                };
        table_agendamento.getColumnModel().getColumn(1).setCellRenderer(numeros);
        try {         
            valorTotal=0;
            while (conexao_servico.resultset.next()) {
                    String data = conexao_servico.resultset.getString("data");
                    String data2=data.substring(8,10)+"/"+data.substring(5,7)+"/"+data.substring(0,4);
                    double valor= Double.parseDouble(conexao_servico.resultset.getString("preco"));
                    valorTotal=valorTotal+valor;
                    
                    modeloagendamento.addRow(new Object[]{
                    conexao_servico.resultset.getString("cod"),
                    conexao_servico.resultset.getString("nomecliente"),
                    data2,
                    conexao_servico.resultset.getString("nome"),
                    valor,
                    conexao_servico.resultset.getString("formaPagamento")});
                    
            }
            jt_valor.setText(""+valorTotal);
            conexao_servico.resultset.first();
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao listar no JTable " + erro);
        }
    }
    
    
    
    
    
    
    private void inserirServico(){
        Date choosed = (Date) date_serv.getValue();       
        SimpleDateFormat formatador = new SimpleDateFormat("yyyy-MM-dd");
        
        try{
                    String codigo = conexao_servico.statement.executeQuery("select max(cod)+1 from servicos").toString();
            
            
                        String sqlinsert ="insert into servicos (cod, nome, descricao,preco,nomecliente,formaPagamento,data) values ('"+
                        //jt_cod.getText()+"','"+
                        codigo+ "','"+
                        jt_servico.getText()+"','"+
                        jt_servico.getText()+"','"+
                        jt_preco.getText()+"','"+
                        jt_cliente.getText()+"','"+
                        jcbPagamento.getSelectedItem()+"','"+
                        formatador.format( choosed )+"')";
                        
                        //jt_code.getText()+"','"+
            //String sqlinsert = "insert into clientes(Nome,Endereco,Bairro,Cidade,cep,Telefone Fixo, Celular) values('Nome','Endereco','Bairro','Cidade','cep','Telefone Fixo', 'Celular')";
            // JOptionPane.showMessageDialog(null,sqlinsert);

            conexao_servico.statement.executeUpdate(sqlinsert);
            JOptionPane.showMessageDialog(null, "Gravação Realizada com sucesso");

            //jt_cod.setText("");
            jt_cliente.setText("");
            jt_servico.setText("");
            jt_preco.setText("");
            jcbPagamento.setSelectedItem("--Selecione--");
            
            

        } 
        catch(SQLException erro){
            System.out.println(erro);
            JOptionPane.showMessageDialog(null,"Não gravou" + erro);

        }
    }
    private void conexaoServico(){
            conexao_servico = new conexao();
            conexao_servico.conecta();
            conexao_servico.executaSQL("select * from servicos where nomecliente= '"+Cliente+"'");
    }
    
    private void desconexaoServico(){
        conexao_servico.desconecta();
    } 

}
